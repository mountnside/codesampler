NOTE:

For some reason, you have to do a "Rebuild Solution" instead of a regular 
Build when using Visual Studio .NET 2003. If not, the files generated by the 
"Custom Build Step" will not generate and you’ll get several build errors.

-------------------------------------------------------------------------------

NOTE:

To change the script file which is executed by default when you 
run the project from the Visual C++ 6.0 work space, do the following:

1. On the menu, go to Project->Settings and launch the 
   "Project Settings" dialog.

2. On the "Project Settings" dialog, go to the "Debug" tab and change
   the file specified by the "Program arguments" edit box.

   Example: "Scripts\input.myc"

-------------------------------------------------------------------------------

NOTE:

If you start moving files around or renaming stuff, you may have to 
set the working directory again in "Project Settings" or the compiler 
won't be able to find the script files.

1. While you're at the "Project Settings" dialog, copy the path from
   "Executable for debug session" and paste it into the "Working Directory"
   edit box.

2. Then, take the executable's file name off so only the directory path remains.

   Example:

		Debug\my_c.exe

   Becomes...

		Debug\

-------------------------------------------------------------------------------

NOTE:

If you rename the sample's parent directory from "custom_scripting_language"
to something else, you'll need to fix the path, which allows the "unistd.h"
to be found and included during the build process.

1. On the menu, go to Project->Settings and launch the 
   "Project Settings" dialog.

2. On the "Project Settings" dialog, go to the "C++" tab and select 
   "Preprocessor" from the "Category" drop-down box.

3. In the "Additional include paths edit box you should see the following 
   relative path:

   "..\custom_scripting_language"

   Change the name to match the parent directories new name.

-------------------------------------------------------------------------------

NOTE:

The following files are created by Flex and Bison whenever the project is 
compiled, so don't bother editing the code contained within them.

lexSymbol.h
lex.cpp
parse.cpp
parse.cpp.output

-------------------------------------------------------------------------------

